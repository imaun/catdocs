openapi: 3.0.1
info:
  title: Pet API
  description: API for managing pets (cats and dogs)
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local server
paths:
  /pets:
    get:
      summary: Get all pets
      operationId: getAllPets
      responses:
        '200':
          description: A list of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
    post:
      summary: Add a new pet
      operationId: addPet
      requestBody:
        description: Pet to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Pet added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
  '/pets/{id}':
    get:
      summary: Get a pet by ID
      operationId: getPetById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pet found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found
    put:
      summary: Update a pet by ID
      operationId: updatePet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Pet data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '200':
          description: Pet updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found
    delete:
      summary: Delete a pet by ID
      operationId: deletePet
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Pet deleted successfully
        '404':
          description: Pet not found
  '/pets/byname/{name}':
    get:
      summary: Get a pet by name
      operationId: getPetByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pet found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found
components:
  schemas:
    Pet:
      required:
        - name
        - breed
        - type
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the pet
        name:
          type: string
          description: Name of the pet
        breed:
          type: string
          description: Breed of the pet
        type:
          enum:
            - cat
            - dog
          type: string
          description: Type of the pet (cat or dog)
        birth_date:
          type: string
          description: Birth date of the pet
          format: date
        image_url:
          type: string
          description: URL to the pet's image
          format: uri
        owner_name:
          type: string
          description: Name of the pet's owner
        owner_contact:
          type: string
          description: Contact information of the pet's owner